import 'dart:io';

import 'globals.dart';

String getConfigFileText({
  String? link,
  String? earlier,
  String? later,
  String? regex,
  String? keep,
  String? username,
  String? password,
  String? ftphost,
  String? frequency,
}) =>
    """
Config file generated by Record on Calendar
Only change values after colons! Leave a space after the colons!

iCal link for calendar
link: ${link ?? ""}
Update frequency of calendar (minutes)
frequency: ${frequency ?? "30"}

Start recording minutes earlier then calendar event start
earlier: ${earlier ?? "5"}

Stop recording minutes later then calendar event end
later: ${later ?? "30"}

Keep this number of latest recordings, delete older automatically (0 means never delete)
keep: ${keep ?? "0"}

Only record on events matching following regular expression (help: regexr.com)
"." means record every event
regex: ${regex ?? "."}

Upload files to FTP - leave host empty to disable
ftphost: ${ftphost ?? ""}
username: ${username ?? ""}
password: ${password ?? ""}

File generated by
version: $version
Don't change this line!
""";

String? getConfigValue(String name, String configString) {
  List<String> lines = configString.split("\n");
  try {
    return lines
        .firstWhere((element) => element.startsWith(name))
        .substring(name.length + 2);
  } catch (e) {
    return null;
  }
}

loadConfig() {
  String configString = configFile.readAsStringSync();

  //! Migrate
  if (getConfigValue('version', configString) != version) {
    configFile.writeAsStringSync(
      getConfigFileText(
        earlier: getConfigValue('earlier', configString),
        later: getConfigValue('later', configString),
        keep: getConfigValue('keep', configString),
        regex: getConfigValue('regex', configString),
        link: getConfigValue('link', configString),
        username: getConfigValue('username', configString),
        password: getConfigValue('password', configString),
        ftphost: getConfigValue('ftphost', configString),
        frequency: getConfigValue('frequency', configString),
      ),
    );
  }

  //! Load
  try {
    startEarlierByMinutes = int.parse(getConfigValue('earlier', configString)!);
    endLaterByMinutes = int.parse(getConfigValue('later', configString)!);
    keepRecordings = int.parse(getConfigValue('keep', configString)!);
    matchEventName = RegExp(getConfigValue('regex', configString)!);
    iCalUri = Uri.parse(getConfigValue('link', configString)!);
    ftpUsername = getConfigValue('username', configString);
    ftpPassword = getConfigValue('password', configString);
    ftpHost = getConfigValue('ftphost', configString);
    iCalUpdateFrequencyMinutes =
        int.parse(getConfigValue('frequency', configString)!);
  } catch (e) {
    throw ("Could not read config file! If this error persists, please delete file and let the program regenerate it by restarting.\n$e");
  }
}
